THREE.OBJLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(e,t,r,a){var n=this,d=new THREE.XHRLoader(n.manager);d.setCrossOrigin(this.crossOrigin),d.load(e,function(e){t(n.parse(e))},r,a)},parse:function(e){function t(e){var t=parseInt(e);return 3*(t>=0?t-1:t+m.length/3)}function r(e){var t=parseInt(e);return 3*(t>=0?t-1:t+E.length/3)}function a(e){var t=parseInt(e);return 2*(t>=0?t-1:t+f.length/2)}function n(e,t,r){l.vertices.push(m[e],m[e+1],m[e+2],m[t],m[t+1],m[t+2],m[r],m[r+1],m[r+2])}function d(e,t,r){l.normals.push(E[e],E[e+1],E[e+2],E[t],E[t+1],E[t+2],E[r],E[r+1],E[r+2])}function o(e,t,r){l.uvs.push(f[e],f[e+1],f[t],f[t+1],f[r],f[r+1])}function s(e,s,i,l,u,v,m,E,f,c,p,h){var g=t(e),H=t(s),R=t(i);if(void 0===l)n(g,H,R);else{var T=t(l);n(g,H,T),n(H,R,T)}if(void 0!==u){var g=a(u),H=a(v),R=a(m);if(void 0===l)o(g,H,R);else{var T=a(E);o(g,H,T),o(H,R,T)}}if(void 0!==f){var g=r(f),H=r(c),R=r(p);if(void 0===l)d(g,H,R);else{var T=r(h);d(g,H,T),d(H,R,T)}}}console.time("OBJLoader");var i,l,u,v=[];/^o /gm.test(e)===!1&&(l={vertices:[],normals:[],uvs:[]},u={name:""},i={name:"",geometry:l,material:u},v.push(i));for(var m=[],E=[],f=[],c=/v( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/,p=/vn( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/,h=/vt( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/,g=/f( +-?\d+)( +-?\d+)( +-?\d+)( +-?\d+)?/,H=/f( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))?/,R=/f( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))?/,T=/f( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))?/,b=e.split("\n"),w=0;w<b.length;w++){var F=b[w];F=F.trim();var A;0!==F.length&&"#"!==F.charAt(0)&&(null!==(A=c.exec(F))?m.push(parseFloat(A[1]),parseFloat(A[2]),parseFloat(A[3])):null!==(A=p.exec(F))?E.push(parseFloat(A[1]),parseFloat(A[2]),parseFloat(A[3])):null!==(A=h.exec(F))?f.push(parseFloat(A[1]),parseFloat(A[2])):null!==(A=g.exec(F))?s(A[1],A[2],A[3],A[4]):null!==(A=H.exec(F))?s(A[2],A[5],A[8],A[11],A[3],A[6],A[9],A[12]):null!==(A=R.exec(F))?s(A[2],A[6],A[10],A[14],A[3],A[7],A[11],A[15],A[4],A[8],A[12],A[16]):null!==(A=T.exec(F))?s(A[2],A[5],A[8],A[11],void 0,void 0,void 0,void 0,A[3],A[6],A[9],A[12]):/^o /.test(F)?(l={vertices:[],normals:[],uvs:[]},u={name:""},i={name:F.substring(2).trim(),geometry:l,material:u},v.push(i)):/^g /.test(F)||(/^usemtl /.test(F)?u.name=F.substring(7).trim():/^mtllib /.test(F)||/^s /.test(F)))}for(var B=new THREE.Object3D,w=0,y=v.length;y>w;w++){var i=v[w],l=i.geometry,L=new THREE.BufferGeometry;L.addAttribute("position",new THREE.BufferAttribute(new Float32Array(l.vertices),3)),l.normals.length>0&&L.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(l.normals),3)),l.uvs.length>0&&L.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(l.uvs),2));var u=new THREE.MeshLambertMaterial;u.name=i.material.name;var O=new THREE.Mesh(L,u);O.name=i.name,B.add(O)}return console.timeEnd("OBJLoader"),B}};
!function(){"use strict";VIZI.BlueprintInputOverrideGeoJSON=function(t){var e=this;VIZI.BlueprintInput.call(e,t),_.defaults(e.options,{}),e.triggers=[{name:"initialised",arguments:[]},{name:"dataReceived",arguments:["geoJSON"]}],e.actions=[{name:"requestData",arguments:[]}]},VIZI.BlueprintInputOverrideGeoJSON.prototype=Object.create(VIZI.BlueprintInput.prototype),VIZI.BlueprintInputOverrideGeoJSON.prototype.init=function(){var t=this;t.emit("initialised")},VIZI.BlueprintInputOverrideGeoJSON.prototype.requestData=function(){var t=this;if(!t.options.path)throw new Error("Required path option missing");d3.json(t.options.path,function(e,i){return e?(VIZI.DEBUG&&console.log("Failed to request GeoJSON data"),void console.warn(e)):void t.emit("dataReceived",i)})}}();
!function(){"use strict";VIZI.BlueprintOutputGeoJSON=function(t){var e=this;VIZI.BlueprintOutput.call(e,t),_.defaults(e.options,{materialType:"MeshLambertMaterial",name:"GeoJSON"}),_.defaults(e.options.materialOptions,{ambient:16777215,emissive:13421772,shading:THREE.FlatShading}),e.triggers=[{name:"initialised",arguments:[]}],e.actions=[{name:"outputGeoJSON",arguments:["data"]}],e.name=e.options.name,e.world,e.keyUI,e.infoUI,e.pickedMesh,e.lastPickedIdClick},VIZI.BlueprintOutputGeoJSON.prototype=Object.create(VIZI.BlueprintOutput.prototype),VIZI.BlueprintOutputGeoJSON.prototype.init=function(){var t=this;t.emit("initialised")},VIZI.BlueprintOutputGeoJSON.prototype.outputGeoJSON=function(t){var e,o,i=this,n=VIZI.CRS.EPSG3857,r=function(t,e){return e=e||i.world.originZoom,n.pixelsPerMeter(t,e)},a=new THREE.Geometry;_.each(t,function(t){var n=new VIZI.Point,p=new THREE.Shape,u=t.outline;if(u.length>0){_.each(u,function(t,e){o=new VIZI.LatLon(t[1],t[0]);var r=i.world.project(new VIZI.LatLon(t[1],t[0]));0===n.length&&(n.x=-1*r.x,n.y=-1*r.y),0===e?p.moveTo(r.x+n.x,r.y+n.y):p.lineTo(r.x+n.x,r.y+n.y)});var l=t.height?t.height:5+10*Math.random(),s=t.minHeight?t.minHeight:0;void 0===e&&(e=r(o)),l*=e.y,s*=e.y;var I={amount:l-s,bevelEnabled:!1},y=new THREE.ExtrudeGeometry(p,I);y.computeFaceNormals();var h=i.options.materialType;h&&"function"==typeof THREE[h]||(h="MeshLambertMaterial");var m=new THREE[h](i.options.materialOptions);if(void 0!=t.colour){var c=new THREE.Color(4751892);m.color=c}else{var c=new THREE.Color(15658734);m.color=c}m.color=c;var d=new THREE.Mesh(y,m);d.position.y=l,d.position.x=-1*n.x,d.position.z=-1*n.y,d.rotation.x=90*Math.PI/180,d.matrixAutoUpdate&&d.updateMatrix(),a.merge(d.geometry,d.matrix),i.add(d)}});var p=a.center(),u=i.options.materialType;u&&"function"==typeof THREE[u]||(u="MeshLambertMaterial");var l=new THREE[u](i.options.materialOptions),s=new THREE.Mesh(a,l);i.options.layer.toString().length>0&&(s.renderDepth=-1*i.options.layer,s.material.transparent=!1),s.position.x=-1*p.x,s.position.y=-1*p.y,s.position.z=-1*p.z},VIZI.BlueprintOutputGeoJSON.prototype.onHide=function(){var t=this;t.keyUI&&t.keyUI.onHide(),t.infoUI&&t.infoUI.onHide()},VIZI.BlueprintOutputGeoJSON.prototype.onShow=function(){var t=this;t.keyUI&&t.keyUI.onShow(),t.infoUI&&t.infoUI.onShow()},VIZI.BlueprintOutputGeoJSON.prototype.onTick=function(t){var e=this;e.infoUI&&e.infoUI.onChange()},VIZI.BlueprintOutputGeoJSON.prototype.onAdd=function(t){var e=this;e.world=t,e.init()}}();
!function(){"use strict";VIZI.BlueprintOutputFlatBBBuildingTiles=function(e){var t=this;VIZI.BlueprintOutput.call(t,e),_.defaults(t.options,{workerURL:window.wbc3d_conf.WORKERPATH}),t.triggers=[{name:"initialised",arguments:["tiles"]},{name:"gridUpdated",arguments:["tiles"]}],t.actions=[{name:"outputBuildingTile",arguments:["buildings","tile"]}],t.grids={},t.world,t.worker},VIZI.BlueprintOutputFlatBBBuildingTiles.prototype=Object.create(VIZI.BlueprintOutput.prototype),VIZI.BlueprintOutputFlatBBBuildingTiles.prototype.init=function(){var e=this;e.worker=operative(e.outputBuildingTileWorker,[e.options.workerURL]),_.each(e.options.grids,function(t){e.grids[t.zoom]=e.createGrid(t)});var t=[];_.each(e.grids,function(e){t=t.concat(e.grid.tiles)}),e.emit("initialised",t)},VIZI.BlueprintOutputFlatBBBuildingTiles.prototype.createGrid=function(e){var t=this,i={},n=new VIZI.BlueprintHelperTileGrid(t.world,e);n.on("moved",function(e,o){VIZI.DEBUG&&console.log("Grid moved",e,o),_.each(i.meshes,function(e){t.remove(e)}),i.meshes=[],n.disable||t.emit("gridUpdated",e)}),n.on("disabled",function(){VIZI.DEBUG&&console.log("Grid disabled"),_.each(i.meshes,function(e){e.visible=!1})}),n.on("enabled",function(){VIZI.DEBUG&&console.log("Grid enabled"),t.emit("gridUpdated",n.tiles),_.each(i.meshes,function(e){e.visible=!0})});var o=n.init();return VIZI.DEBUG&&console.log("Grid initialised",o),i.grid=n,i.meshes=[],i},VIZI.BlueprintOutputFlatBBBuildingTiles.prototype.outputBuildingTile=function(e,t){var i=this,n=i.grids[t.z],o=(new THREE.JSONLoader,null);o=null!=i.options.globalData&&null!=i.options.globalData.animator?i.options.globalData.animator.material:new THREE.MeshLambertMaterial({color:15658734,ambient:16777215,emissive:13421772,shading:THREE.FlatShading}),i.worker(i.world.origin,i.world.originZoom,e,i.options.bbox).then(function(e){var t=e.offset,r=new THREE.BufferGeometry;r.addAttribute("position",new THREE.BufferAttribute(e.position,3)),r.addAttribute("normal",new THREE.BufferAttribute(e.normal,3)),r.addAttribute("uv",new THREE.BufferAttribute(e.uv,2));var a=new THREE.Mesh(r,o);a.position.x=-1*t.x,a.position.y=-1*t.y,a.position.z=-1*t.z,n.meshes.push(a),i.add(a)},function(e){})},VIZI.BlueprintOutputFlatBBBuildingTiles.prototype.outputBuildingTileWorker=function(e,t,i,n){var o,r,a=this,l=a.deferred(),u=VIZI.CRS.EPSG3857,s={color:15658734,ambient:16777215,emissive:13421772,shading:THREE.FlatShading},d=function(i,n){n=n||t;var o=u.latLonToPoint(e,n,{round:!0}),r=u.latLonToPoint(i,n,{round:!0});return r.subtract(o)},p=function(e,i){return i=i||t,u.pixelsPerMeter(e,i)},c=function(e){return e[1]>n[0]&&e[1]<n[2]&&e[0]>n[1]&&e[0]<n[3]?!0:!1},f=new THREE.Geometry,g=!1;_.each(i,function(e){if(g=!1,r=null,n&&e.outline[0].length>0){var t=[e.outline[0][0][0],e.outline[0][0][1]];c(t)&&(g=!0)}if(!g){var i=new VIZI.Point,a=new THREE.Shape,l=[],u=0,m=0,h=0;_.each(e.outline[0],function(e,t){var n=new VIZI.LatLon(e[1],e[0]),r=d(n);void 0===o&&(o=p(n)),0===i.length&&(i.x=-1*r.x,i.y=-1*r.y),l.push(new THREE.Vector2(r.x+i.x,r.y+i.y)),0===t?a.moveTo(r.x+i.x,r.y+i.y):a.lineTo(r.x+i.x,r.y+i.y),u+=n.lat,m+=n.lon,h++}),u/=h,m/=h;var E=e.height?e.height:5+10*Math.random(),v=e.minHeight?e.minHeight:0;E*=o.y,v*=o.y;var B={amount:E-v,bevelEnabled:!1},I=new THREE.ExtrudeGeometry(a,B);I.computeFaceNormals();var T=new THREE.MeshLambertMaterial(s),w=new THREE.Color(16777215*Math.random());T.color=w;var b=new THREE.Mesh(I,T);b.position.y=E,b.position.x=-1*i.x,b.position.z=-1*i.y,b.rotation.x=90*Math.PI/180,b.matrixAutoUpdate&&b.updateMatrix();for(var y=new THREE.Vector2(0,0),x=0;x<l.length;x++)y.add(l[x]);y.divideScalar(l.length);for(var x=(b.position,0);x<I.faceVertexUvs[0].length;x+=2)for(var R=0;2>R;R++)for(var V=0;3>V;V++)I.faceVertexUvs[0][x+R][V].x=y.x,I.faceVertexUvs[0][x+R][V].y=y.y,I.faceVertexUvs[0][x+R][V].z=0;b.uvsNeedUpdate=!0,f.merge(b.geometry,b.matrix)}});var m=f.center(),h=new THREE.BufferGeometry;h.fromGeometry(f);var E={offset:m},v=[];h.attributesKeys.forEach(function(e){E[e]=h.attributes[e].array,v.push(E[e].buffer)}),l.transferResolve(E,v)},VIZI.BlueprintOutputFlatBBBuildingTiles.prototype.onAdd=function(e){var t=this;t.world=e,t.init()}}();
!function(){"use strict";VIZI.BlueprintInputData=function(t){var a=this;VIZI.BlueprintInput.call(a,t),_.defaults(a.options,{}),a.triggers=[{name:"initialised",arguments:[]},{name:"dataReceived",arguments:["dataJSON"]}],a.actions=[{name:"requestData",arguments:[]},{name:"updateOverpassPath",arguments:[]}]},VIZI.BlueprintInputData.prototype=Object.create(VIZI.BlueprintInput.prototype),VIZI.BlueprintInputData.prototype.init=function(){var t=this;t.emit("initialised")},VIZI.BlueprintInputData.prototype.updateOverpassPath=function(t){var a=this;a.options.path=a.options.globalData.overpassInputPath()},VIZI.BlueprintInputData.prototype.requestData=function(){var t=this;if(!t.options.path)throw new Error("Required path option missing");var a=function(a){function e(t){var a=[],e=Object.keys(t);return e.forEach(function(e){a.push(t[e])}),a}var r,o;for(var i in a)if("osm3s"!=i){if(Array.isArray(a)){o=a;break}if(Array.isArray(a[i])){o=a[i];break}if("[object Object]"===Object.prototype.toString.call(a[i])){r=a[i];break}}if(void 0===o&&void 0===r)throw new Error("JSON doesn't have a data object");o||(o=e(r)),a.data=o,console.log("Data received: "+t.options.path),t.emit("dataReceived",a),t.options.repeat&&window.setTimeout(function(){t.emit("requestData","repeat")},t.options.repeatRate)},e=0,r=function(t,r,i){console.log("radial search json request error: "+r),"timeout"===r&&e++<5&&$.ajax(o,a)},o={url:t.options.path,dataType:"json",success:a,error:r,timeout:5e3};$.ajax(o,a)}}();
!function(){"use strict";VIZI.BlueprintOutputTrees=function(e){var t=this;VIZI.BlueprintOutput.call(t,e),_.defaults(t.options,{}),t.triggers=[{name:"initialised",arguments:[]}],t.actions=[{name:"outputTrees",arguments:["sensor"]}],t.world,t.modelYpos=0,t.treeAmount=0,t.treeLimit=1e3,t.trees,t.treeModel,t.treeModelB,t.treeModelC;var o=new THREE.JSONLoader,r=window.wbc3d_conf.DATADIR;t.models=[r+"3d/tree.js",r+"3d/tree2.js",r+"3d/tree3.js"],t.modelCount=0,o.load(t.models[0],t.loadTreeModel.bind(t)),o.load(t.models[1],t.loadTreeModelB.bind(t)),o.load(t.models[2],t.loadTreeModelC.bind(t))},VIZI.BlueprintOutputTrees.prototype=Object.create(VIZI.BlueprintOutput.prototype),VIZI.BlueprintOutputTrees.prototype.init=function(){var e=this;e.emit("initialised")},VIZI.BlueprintOutputTrees.prototype.outputTrees=function(e){for(var t=this,o=0;o<=e.length;o++)if(void 0!==e[o]){var r=e[o].coordinates[1],n=e[o].coordinates[0],i="Tree",l=e[o].height,d=[];t.createTree(n,r,i,d,void 0,l)}},VIZI.BlueprintOutputTrees.prototype.createTree=function(e,t,o,r,n,i){var l=this;if(!(l.treeAmount>=l.treeLimit)){var d,u=2,a=0,s=Math.floor(Math.random()*(u-a+1))+a;0===s?d=new THREE.Mesh(l.treeModel.geometry.clone(),l.treeModel.material.clone()):1===s?d=new THREE.Mesh(l.treeModelB.geometry.clone(),l.treeModelB.material.clone()):2===s&&(d=new THREE.Mesh(l.treeModelC.geometry.clone(),l.treeModelC.material.clone())),d.name=o,d.description=r,d.height=i;var p=VIZI.CRS.EPSG3857,M=function(e,t){return t=t||originZoom,p.pixelsPerMeter(e,t)},m=new VIZI.LatLon(e,t),c=l.world.project(m);if(d.position.x=c.x,d.position.y=d.height?d.height*M(m,l.world.originZoom).y:l.modelYpos,d.position.z=c.y,void 0==l.trees)l.trees=d,l.add(l.trees);else{var u=6,a=0,T=Math.random()*(u-a)+a;d.rotateY(T),d.updateMatrix(),l.trees.geometry.merge(d.geometry,d.matrix),l.trees.position.set(0,0,0)}l.treeAmount++}},VIZI.BlueprintOutputTrees.prototype.onAdd=function(e){var t=this;t.world=e,t.init()},VIZI.BlueprintOutputTrees.prototype.loadTreeModel=function(e,t){var o=this,r=new THREE.MeshFaceMaterial(t);o.treeModel=new THREE.Mesh(e,r),o.updateModelCount()},VIZI.BlueprintOutputTrees.prototype.loadTreeModelB=function(e,t){var o=this,r=new THREE.MeshFaceMaterial(t);o.treeModelB=new THREE.Mesh(e,r),o.updateModelCount()},VIZI.BlueprintOutputTrees.prototype.loadTreeModelC=function(e,t){var o=this,r=new THREE.MeshFaceMaterial(t);o.treeModelC=new THREE.Mesh(e,r),o.updateModelCount()},VIZI.BlueprintOutputTrees.prototype.updateModelCount=function(){var e=this;e.modelCount++,e.modelCount==e.models.length&&e.emit("trees ready")}}();
function wbc3d(t,e,i,r,o){var n=new VIZI.LatLon(e),a=new VIZI.World({viewport:document.querySelector(t),picking:!0,center:n}),u=(new VIZI.ControlsMap(a.camera,{viewport:a.options.viewport}),{input:{type:"BlueprintInputMapTiles",options:{tilePath:"http://tiles.codefor.de/bbs-hamburg/{z}/{x}/{y}.png"}},output:{type:"BlueprintOutputImageTiles",options:{grids:[{zoom:19,tilesPerDirection:3,cullZoom:17},{zoom:18,tilesPerDirection:3,cullZoom:16},{zoom:17,tilesPerDirection:3,cullZoom:15},{zoom:16,tilesPerDirection:3,cullZoom:14},{zoom:15,tilesPerDirection:3,cullZoom:13},{zoom:14,tilesPerDirection:3,cullZoom:12},{zoom:13,tilesPerDirection:5,cullZoom:11}]}},triggers:[{triggerObject:"output",triggerName:"initialised",triggerArguments:["tiles"],actionObject:"input",actionName:"requestTiles",actionArguments:["tiles"],actionOutput:{tiles:"tiles"}},{triggerObject:"output",triggerName:"gridUpdated",triggerArguments:["tiles"],actionObject:"input",actionName:"requestTiles",actionArguments:["tiles"],actionOutput:{tiles:"tiles"}},{triggerObject:"input",triggerName:"tileReceived",triggerArguments:["image","tile"],actionObject:"output",actionName:"outputImageTile",actionArguments:["image","tile"],actionOutput:{image:"image",tile:"tile"}}]}),p=new VIZI.BlueprintSwitchboard(u);p.addToWorld(a);var g={input:{type:"BlueprintInputGeoJSON",options:{tilePath:"http://vector.mapzen.com/osm/buildings/{z}/{x}/{y}.json"}},output:{type:"BlueprintOutputFlatBBBuildingTiles",options:{grids:[{zoom:15,tilesPerDirection:1,cullZoom:13}],workerURL:window.wbc3d_conf.WORKERPATH,bbox:r}},triggers:[{triggerObject:"output",triggerName:"initialised",triggerArguments:["tiles"],actionObject:"input",actionName:"requestTiles",actionArguments:["tiles"],actionOutput:{tiles:"tiles"}},{triggerObject:"output",triggerName:"gridUpdated",triggerArguments:["tiles","newTiles"],actionObject:"input",actionName:"requestTiles",actionArguments:["tiles"],actionOutput:{tiles:"newTiles"}},{triggerObject:"input",triggerName:"tileReceived",triggerArguments:["geoJSON","tile"],actionObject:"output",actionName:"outputBuildingTile",actionArguments:["buildings","tile"],actionOutput:{buildings:{process:"map",itemsObject:"geoJSON",itemsProperties:"features",transformation:{outline:"geometry.coordinates",height:"properties.height",minHeight:"properties.min_height",id:"properties.id"}},tile:"tile"}}]},s=new VIZI.BlueprintSwitchboard(g);s.addToWorld(a);var c=i.split(".").pop();if("geojson"==c||"json"==c)var l={input:{type:"BlueprintInputOverrideGeoJSON",options:{path:i}},output:{type:"BlueprintOutputGeoJSON",options:{colourRange:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],layer:100}},triggers:[{triggerObject:"output",triggerName:"initialised",triggerArguments:[],actionObject:"input",actionName:"requestData",actionArguments:[],actionOutput:{}},{triggerObject:"input",triggerName:"dataReceived",triggerArguments:["geoJSON"],actionObject:"output",actionName:"outputGeoJSON",actionArguments:["data"],actionOutput:{data:{process:"map",itemsObject:"geoJSON",itemsProperties:"features",transformation:{outline:"geometry.coordinates",height:"properties.height",minHeight:"properties.min_height",colour:"properties.building:colour",id:"properties.id"}}}}]};else if("obj"==c)var l={input:{type:"BlueprintInputOBJ",options:{path:i}},output:{type:"BlueprintOutputOBJ",options:{colourRange:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],layer:100}},triggers:[{triggerObject:"output",triggerName:"initialised",triggerArguments:[],actionObject:"input",actionName:"requestData",actionArguments:[],actionOutput:{}},{triggerObject:"input",triggerName:"dataReceived",triggerArguments:["obj"],actionObject:"output",actionName:"outputOBJ",actionArguments:["data"],actionOutput:{}}]};var m=new VIZI.BlueprintSwitchboard(l);m.addToWorld(a);var d={input:{type:"BlueprintInputData",options:{path:o,repeat:!1}},output:{type:"BlueprintOutputTrees",options:{}},triggers:[{triggerObject:"output",triggerName:"trees ready",triggerArguments:[],actionObject:"input",actionName:"requestData",actionArguments:[],actionOutput:{}},{triggerObject:"input",triggerName:"dataReceived",triggerArguments:["data"],actionObject:"output",actionName:"outputTrees",actionArguments:["trees"],actionOutput:{trees:{process:"map",itemsObject:"data",itemsProperties:"data",transformation:{coordinates:["lat","lon"],height:"height"}}}}]},O=new VIZI.BlueprintSwitchboard(d);O.addToWorld(a);var b={input:{type:"BlueprintInputData",options:{path:"http://overpass-api.de/api/interpreter?data=[out:json];((node(around:1000.0,"+a.center.lat+","+a.center.lon+")[natural~%22tree%22];);(._;node(w);););out;",repeat:!1}},output:{type:"BlueprintOutputTrees",options:{}},triggers:[{triggerObject:"output",triggerName:"trees ready",triggerArguments:[],actionObject:"input",actionName:"requestData",actionArguments:[],actionOutput:{}},{triggerObject:"input",triggerName:"dataReceived",triggerArguments:["dataJSON"],actionObject:"output",actionName:"outputTrees",actionArguments:["trees"],actionOutput:{trees:{process:"map",itemsObject:"dataJSON",itemsProperties:"data",transformation:{coordinates:["lat","lon"],node:"id"}}}}]},j=new VIZI.BlueprintSwitchboard(b);j.addToWorld(a);var N=new VIZI.Clock,h=function(){var t=N.getDelta();a.onTick(t),a.render(),window.requestAnimationFrame(h)};h()}